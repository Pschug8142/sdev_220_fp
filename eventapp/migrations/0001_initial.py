# Generated by Django 4.2.7 on 2023-12-15 23:52

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="Toon",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=12)),
                ("realm", models.CharField(max_length=30)),
                (
                    "realm_region",
                    models.CharField(
                        choices=[
                            ("americas", "Americas"),
                            ("europe", "Europe"),
                            ("korea", "Korea"),
                            ("taiwan", "Taiwan"),
                        ],
                        default="americas",
                        max_length=10,
                    ),
                ),
                ("level", models.IntegerField(default=70)),
                (
                    "tclass",
                    models.CharField(
                        choices=[
                            ("death_knight", "Death Knight"),
                            ("demon_hunter", "Demon Hunter"),
                            ("druid", "Druid"),
                            ("evoker", "Evoker"),
                            ("hunter", "Hunter"),
                            ("mage", "Mage"),
                            ("monk", "Monk"),
                            ("paladin", "Paladin"),
                            ("priest", "Priest"),
                            ("rogue", "Rogue"),
                            ("shaman", "Shaman"),
                            ("warlock", "Warlock"),
                            ("warrior", "Warrior"),
                        ],
                        default="death_knight",
                        max_length=30,
                    ),
                ),
                (
                    "primary_role",
                    models.CharField(
                        choices=[
                            ("tank", "Tank"),
                            ("heal", "Heal"),
                            ("damage", "Damage"),
                            ("hybrid", "Hybrid"),
                            ("none", "None"),
                        ],
                        default="damage",
                        max_length=10,
                    ),
                ),
                (
                    "secondary_role",
                    models.CharField(
                        choices=[
                            ("tank", "Tank"),
                            ("heal", "Heal"),
                            ("damage", "Damage"),
                            ("hybrid", "Hybrid"),
                            ("none", "None"),
                        ],
                        max_length=10,
                        null=True,
                    ),
                ),
                ("gear_score", models.IntegerField(default=0)),
                (
                    "player_name",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Player",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "name",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="EventPost",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("title", models.CharField(max_length=200)),
                ("event_type", models.CharField(max_length=200)),
                ("text", models.TextField()),
                (
                    "created_date",
                    models.DateTimeField(default=django.utils.timezone.now),
                ),
                ("event_date", models.DateTimeField(blank=True, null=True)),
                ("min_participants", models.IntegerField(default=0, null=True)),
                ("max_participants", models.IntegerField(default=0, null=True)),
                (
                    "author",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                ("participants", models.ManyToManyField(to="eventapp.toon")),
            ],
        ),
        migrations.CreateModel(
            name="EventSignUp",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "event",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="eventapp.eventpost",
                    ),
                ),
                (
                    "toon",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="eventapp.toon"
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "Attendee",
                "verbose_name_plural": "Attendees",
                "unique_together": {("event", "user")},
            },
        ),
    ]
